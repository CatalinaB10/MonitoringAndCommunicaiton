services:
 
  reverse-proxy:
    image: traefik:v3.2
    command:
      - --api.insecure=true
      - --providers.docker
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik/access.log
      - --log.level=DEBUG
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#      - traefik_logs:/var/log/traefik
    networks:
      - ds-network
 
  mc:
    image: mes-img
    build:
      context: MeasurementPublisherAPI
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=Host(`monitoring.localhost`)"
      - "traefik.http.services.user.loadbalancer.server.port=9090"
    environment:
      - ASPNETCORE_URLS=http://+:9090
    networks:
      - ds-network
    depends_on:
    - mc-ds-db
    - reverse-proxy
 
  mc-ds-db:
     image: postgres:latest
     container_name: mc-ds-db
     environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: rox123
      POSTGRES_DB: MMS
     ports:
      - "5434:5432"
     restart: always
     volumes:
      - psql_data3:/var/lib/postgreql/data/  
     networks:
      - ds-network
     healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
 
volumes:
    psql_data3:
 
networks:
  ds-network:
    driver: bridge